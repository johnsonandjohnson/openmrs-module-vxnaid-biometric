<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.openmrs.maven.parents</groupId>
    <artifactId>maven-parent-openmrs-module</artifactId>
    <version>1.1.1</version>
  </parent>

  <groupId>org.openmrs.module</groupId>
  <artifactId>vxnaidbiometric</artifactId>
  <version>1.2.7</version>
  <packaging>pom</packaging>
  <name>Biometric API Module</name>
  <description>The biometric module will provide REST APIs to integrate biometric solutions
  </description>

  <scm>
    <connection>scm:git:https://github.com/johnsonandjohnson/openmrs-module-vxnaid-biometric.git</connection>
    <developerConnection>scm:git:https://github.com/johnsonandjohnson/openmrs-module-vxnaid-biometric .git</developerConnection>
    <url>https://github.com/johnsonandjohnson/openmrs-module-vxnaid-biometric.git</url>
    <tag>1.2.7</tag>
  </scm>

  <modules>
    <module>api</module>
    <module>omod</module>
  </modules>

  <properties>
    <main.basedir>${project.basedir}</main.basedir>

    <java.version>1.8</java.version>
    <javaCompilerSource>1.8</javaCompilerSource>
    <javaCompilerTarget>1.8</javaCompilerTarget>

    <openmrs.platform.version>2.0.1</openmrs.platform.version>
    <addressHierarchyVersion>2.11.0</addressHierarchyVersion>
    <licenseManagementVersion>1.1.5</licenseManagementVersion>
    <openmrsApiVersion>2.0.1</openmrsApiVersion>
    <visitApiVersion>1.6.0</visitApiVersion>
    <coreappsVersion>1.21.0</coreappsVersion>

    <neurotech.api.version>11.2.0.0</neurotech.api.version>
    <neurotech.lib.path>${main.basedir}/lib</neurotech.lib.path>
    <net.java.dev.jna.version>4.5.0</net.java.dev.jna.version>

    <gsonVersion>1.7.1</gsonVersion>
    <httpClientVersion>3.1.0</httpClientVersion>
    <jsr311ApiVersion>1.1</jsr311ApiVersion>
    <guavaVersion>23.0</guavaVersion>
    <javax.servlet.version>3.0.1</javax.servlet.version>
    <mysqlConnectorJavaVersion>5.1.49</mysqlConnectorJavaVersion>
    <jacksonAnnotationsVersion>2.11.3</jacksonAnnotationsVersion>
    <commonsCodecVersion>1.12</commonsCodecVersion>
    <commonsLangVersion>2.6</commonsLangVersion>
    <commonsTextVersion>1.7</commonsTextVersion>
    <jsoupVersion>1.11.3</jsoupVersion>

    <checkStylePluginVersion>3.1.2</checkStylePluginVersion>
    <pmdPluginVersion>3.12.0</pmdPluginVersion>
    <checkStylePluginSkip>false</checkStylePluginSkip>
    <checkStyleVersion>9.0.1</checkStyleVersion>
    <findBugsPluginVersion>3.0.5</findBugsPluginVersion>
    <jacocoVersion>0.8.2</jacocoVersion>

    <pmdPluginSkip>false</pmdPluginSkip>
    <findBugsPluginSkip>true</findBugsPluginSkip>
    <skipTests>false</skipTests>

    <maven.surefire.plugin.version>2.17</maven.surefire.plugin.version>
    <mvndependencyplugin.version>3.1.2</mvndependencyplugin.version>
    <mavenReleasePluginVersion>2.5</mavenReleasePluginVersion>
    <mavenInstallPluginVersion>2.5.2</mavenInstallPluginVersion>

    <uiframeworkVersion>3.4</uiframeworkVersion>

    <sonar.coverage.exclusions>
      **/test/**/*.*
      **/filter/**/*.*
      **/constants/**/*.*
      **/types/**/*.*
      **/extensions/**/*.*
      **/BiometricModuleActivator.*
      **/api/service/BiometricServiceImpl.*
      **/api/contract/BiometricMatchingResult.*
    </sonar.coverage.exclusions>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.openmrs.module</groupId>
        <artifactId>vxnaidlicensemanagement-api</artifactId>
        <version>${licenseManagementVersion}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.openmrs.module</groupId>
        <artifactId>coreapps-api</artifactId>
        <version>${coreappsVersion}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.openmrs.module</groupId>
        <artifactId>addresshierarchy-api</artifactId>
        <version>${addressHierarchyVersion}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.openmrs.module</groupId>
        <artifactId>visits-api</artifactId>
        <version>${visitApiVersion}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.openmrs.api</groupId>
        <artifactId>openmrs-api</artifactId>
        <version>${openmrs.platform.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysqlConnectorJavaVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.jsoup</groupId>
        <artifactId>jsoup</artifactId>
        <version>${jsoupVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-text</artifactId>
        <version>${commonsTextVersion}</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commonsCodecVersion}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jacksonAnnotationsVersion}</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${javax.servlet.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>jsr311-api</artifactId>
        <version>${jsr311ApiVersion}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guavaVersion}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gsonVersion}</version>
        <scope>provided</scope>
      </dependency>

      <!-- Biometric module dependencies-->
      <!-- Neurotech dependencies-->
      <dependency>
        <groupId>com.neurotec</groupId>
        <artifactId>neurotec-core</artifactId>
        <version>${neurotech.api.version}</version>
      </dependency>
      <dependency>
        <groupId>com.neurotec</groupId>
        <artifactId>neurotec-media</artifactId>
        <version>${neurotech.api.version}</version>
      </dependency>
      <dependency>
        <groupId>com.neurotec</groupId>
        <artifactId>neurotec-media-processing</artifactId>
        <version>${neurotech.api.version}</version>
      </dependency>
      <dependency>
        <groupId>com.neurotec</groupId>
        <artifactId>neurotec-biometrics</artifactId>
        <version>${neurotech.api.version}</version>
      </dependency>
      <dependency>
        <groupId>com.neurotec</groupId>
        <artifactId>neurotec-biometrics-client</artifactId>
        <version>${neurotech.api.version}</version>
      </dependency>
      <dependency>
        <groupId>com.neurotec</groupId>
        <artifactId>neurotec-licensing</artifactId>
        <version>${neurotech.api.version}</version>
      </dependency>
      <dependency>
        <groupId>com.neurotec</groupId>
        <artifactId>neurotec-devices</artifactId>
        <version>${neurotech.api.version}</version>
      </dependency>
      <dependency>
        <groupId>net.java.dev.jna</groupId>
        <artifactId>jna</artifactId>
        <version>${net.java.dev.jna.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>${commonsLangVersion}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.openmrs.api</groupId>
        <artifactId>openmrs-api</artifactId>
        <type>test-jar</type>
        <version>${openmrs.platform.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>javassist</groupId>
            <artifactId>javassist</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- Swagger dependencies-->
      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-core</artifactId>
        <scope>provided</scope>
        <version>1.6.2</version>
        <exclusions>
          <exclusion>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.openmrs.module</groupId>
        <artifactId>uiframework-api</artifactId>
        <version>${uiframeworkVersion}</version>
        <type>jar</type>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${checkStylePluginVersion}</version>
          <configuration>
            <configLocation>checkstyle.xml</configLocation>
            <encoding>${project.build.sourceEncoding}</encoding>
            <consoleOutput>true</consoleOutput>
            <logViolationsToConsole>true</logViolationsToConsole>
            <failsOnError>true</failsOnError>
            <enableFilesSummary>true</enableFilesSummary>
            <includeTestSourceDirectory>false</includeTestSourceDirectory>
            <skip>${checkStylePluginSkip}</skip>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkStyleVersion}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>verify-checkstyle</id>
              <phase>validate</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>${pmdPluginVersion}</version>
          <configuration>
            <rulesets>
              <ruleset>${project.basedir}/../pmd.xml</ruleset>
            </rulesets>
            <linkXRef>false</linkXRef>
            <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
            <minimumTokens>100</minimumTokens>
            <printFailingErrors>true</printFailingErrors>
            <analysisCache>true</analysisCache>
            <includeTests>false</includeTests>
            <failOnViolation>true</failOnViolation>
            <skip>${pmdPluginSkip}</skip>
          </configuration>
          <executions>
            <execution>
              <id>validate-pmd</id>
              <phase>validate</phase>
              <goals>
                <goal>check</goal>
                <goal>cpd-check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>${findBugsPluginVersion}</version>
          <configuration>
            <includeFilterFile>findbugs-include.xml</includeFilterFile>
            <skip>${findBugsPluginSkip}</skip>
          </configuration>
          <executions>
            <execution>
              <id>validate-findbugs</id>
              <phase>validate</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${mavenInstallPluginVersion}</version>
          <executions>
            <execution>
              <id>install-jar-lib</id>
              <phase>initialize</phase>
              <configuration>
                <file>${neurotech.lib.path}/neurotec-biometrics.jar</file>
                <groupId>com.neurotec</groupId>
                <artifactId>neurotec-biometrics</artifactId>
                <version>${neurotech.api.version}</version>
                <packaging>jar</packaging>
                <generatePom>true</generatePom>
              </configuration>
              <goals>
                <goal>install-file</goal>
              </goals>
            </execution>
            <execution>
              <id>install-external-2</id>
              <phase>validate</phase>
              <configuration>
                <file>${neurotech.lib.path}/neurotec-biometrics-client.jar</file>
                <repositoryLayout>default</repositoryLayout>
                <groupId>com.neurotec</groupId>
                <artifactId>neurotec-biometrics-client</artifactId>
                <version>${neurotech.api.version}</version>
                <packaging>jar</packaging>
                <generatePom>true</generatePom>
              </configuration>
              <goals>
                <goal>install-file</goal>
              </goals>
            </execution>
            <execution>
              <id>install-external-3</id>
              <phase>validate</phase>
              <configuration>
                <file>${neurotech.lib.path}/neurotec-licensing.jar</file>
                <repositoryLayout>default</repositoryLayout>
                <groupId>com.neurotec</groupId>
                <artifactId>neurotec-licensing</artifactId>
                <version>${neurotech.api.version}</version>
                <packaging>jar</packaging>
                <generatePom>true</generatePom>
              </configuration>
              <goals>
                <goal>install-file</goal>
              </goals>
            </execution>
            <execution>
              <id>install-external-4</id>
              <phase>validate</phase>
              <configuration>
                <file>${neurotech.lib.path}/neurotec-devices.jar</file>
                <repositoryLayout>default</repositoryLayout>
                <groupId>com.neurotec</groupId>
                <artifactId>neurotec-devices</artifactId>
                <version>${neurotech.api.version}</version>
                <packaging>jar</packaging>
                <generatePom>true</generatePom>
              </configuration>
              <goals>
                <goal>install-file</goal>
              </goals>
            </execution>
            <execution>
              <id>install-external-5</id>
              <phase>validate</phase>
              <configuration>
                <file>${neurotech.lib.path}/neurotec-core.jar</file>
                <repositoryLayout>default</repositoryLayout>
                <groupId>com.neurotec</groupId>
                <artifactId>neurotec-core</artifactId>
                <version>${neurotech.api.version}</version>
                <packaging>jar</packaging>
                <generatePom>true</generatePom>
              </configuration>
              <goals>
                <goal>install-file</goal>
              </goals>
            </execution>
            <execution>
              <id>install-external-6</id>
              <phase>validate</phase>
              <configuration>
                <file>${neurotech.lib.path}/neurotec-media-processing.jar</file>
                <repositoryLayout>default</repositoryLayout>
                <groupId>com.neurotec</groupId>
                <artifactId>neurotec-media-processing</artifactId>
                <version>${neurotech.api.version}</version>
                <packaging>jar</packaging>
                <generatePom>true</generatePom>
              </configuration>
              <goals>
                <goal>install-file</goal>
              </goals>
            </execution>
            <execution>
              <id>install-external-7</id>
              <phase>validate</phase>
              <configuration>
                <file>${neurotech.lib.path}/neurotec-media.jar</file>
                <repositoryLayout>default</repositoryLayout>
                <groupId>com.neurotec</groupId>
                <artifactId>neurotec-media</artifactId>
                <version>${neurotech.api.version}</version>
                <packaging>jar</packaging>
                <generatePom>true</generatePom>
              </configuration>
              <goals>
                <goal>install-file</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
        <artifactId>maven-java-formatter-plugin</artifactId>
        <executions>
          <execution>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
        <configuration>
          <reuseForks>false</reuseForks>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${mavenReleasePluginVersion}</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.shared</groupId>
            <artifactId>maven-invoker</artifactId>
            <version>2.2</version>
          </dependency>
        </dependencies>
        <configuration>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <tagNameFormat>v@{project.version}</tagNameFormat>
          <arguments>-Dmaven.javadoc.skip=true -Dmaven.test.skipTests=true -Dmaven.test.skip=true</arguments>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>code-coverage</id>
      <dependencies>
        <dependency>
          <groupId>org.jacoco</groupId>
          <artifactId>org.jacoco.agent</artifactId>
          <classifier>runtime</classifier>
          <version>${jacocoVersion}</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacocoVersion}</version>
            <configuration>
              <excludes>
                <exclude>org.openmrs.module.biometric.filter/**/*</exclude>
                <exclude>org.openmrs.module.biometric.extension.html/**/*</exclude>
                <exclude>**/*BiometricModuleActivator.*</exclude>
                <!-- The following classes uses third party SDKs which uses native libraries hence excluded from coverage -->
                <exclude>org/openmrs/module/biometric/api/service/impl/BiometricServiceImpl.*</exclude>
                <exclude>org/openmrs/module/biometric/api/contract/BiometricMatchingResult.*</exclude>
              </excludes>
            </configuration>
            <executions>
              <!-- Off line instrumentation is needed to compute coverage for Power Mock tests -->
              <execution>
                <id>default-instrument</id>
                <goals>
                  <goal>instrument</goal>
                </goals>
              </execution>
              <execution>
                <id>default-restore-instrumented-classes</id>
                <goals>
                  <goal>restore-instrumented-classes</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven.surefire.plugin.version}</version>
            <dependencies>
              <dependency>
                <groupId>org.apache.maven.surefire</groupId>
                <artifactId>surefire-junit47</artifactId>
                <version>${maven.surefire.plugin.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <!-- Workaround to https://code.google.com/p/powermock/issues/detail?id=504 -->
              <argLine>-XX:-UseSplitVerifier
                -Dlog4j.configuration=file:src/test/resources/log4j.properties
              </argLine>
              <systemPropertyVariables>
                <jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
              </systemPropertyVariables>
              <reuseForks>false</reuseForks>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>dev</id>
      <properties>
        <checkStylePluginSkip>true</checkStylePluginSkip>
        <pmdPluginSkip>true</pmdPluginSkip>
        <findBugsPluginSkip>true</findBugsPluginSkip>
        <skipTests>true</skipTests>
      </properties>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>openmrs-repo</id>
      <name>OpenMRS Nexus Repository</name>
      <url>https://mavenrepo.openmrs.org/nexus/content/repositories/public</url>
    </repository>
    <repository>
      <id>central</id>
      <name>Maven Repository Switchboard</name>
      <layout>default</layout>
      <url>https://repo1.maven.org/maven2</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>openmrs-repo</id>
      <name>OpenMRS Nexus Repository</name>
      <url>https://mavenrepo.openmrs.org/nexus/content/repositories/public</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>
</project>
