{
  "swagger" : "2.0",
  "info" : {
    "description" : "REST API for Biometric Module.",
    "version" : "v1",
    "title" : "Biometric Module REST API"
  },
  "basePath" : "/openmrs/ws",
  "tags" : [ {
    "name" : "REST API for accessing Configuration information"
  }, {
    "name" : "REST API for accessing User Information and saving operator device"
  }, {
    "name" : "REST API for manage Participant information(add,retrieve and delete)"
  }, {
    "name" : "REST API for managing dosing and follow up visits"
  }, {
    "name" : "REST APIs used by Mobile or Tablet devices to synchronize with the backend data"
  } ],
  "paths" : {
    "/rest/v1/biometric/addresshierarchy" : {
      "get" : {
        "tags" : [ "REST API for accessing Configuration information" ],
        "summary" : "Get Address Hierarchy",
        "description" : "Get Address Hierarchy",
        "operationId" : "getAddressHierarchy",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "On successful return of the address hierarchy",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "object"
              }
            }
          },
          "500" : {
            "description" : "Failure to return address hierarchy"
          }
        }
      }
    },
    "/rest/v1/biometric/config/vaccine-schedule" : {
      "get" : {
        "tags" : [ "REST API for accessing Configuration information" ],
        "summary" : "Retrieves cfl vaccines",
        "description" : "Retrieves cfl vaccines",
        "operationId" : "getVaccineSchedule",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "On successful return of vaccine details",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "Vaccine details not found"
          },
          "500" : {
            "description" : "Failure to return vaccine details"
          }
        }
      }
    },
    "/rest/v1/biometric/config/{name}" : {
      "get" : {
        "tags" : [ "REST API for accessing Configuration information" ],
        "summary" : "Retrieves configuration details by name",
        "description" : "Retrieves config details by name",
        "operationId" : "getConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful return of config details by name",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "Config details not found"
          },
          "500" : {
            "description" : "Failure to return config details"
          }
        }
      }
    },
    "/rest/v1/biometric/devicename" : {
      "post" : {
        "tags" : [ "REST API for accessing User Information and saving operator device" ],
        "summary" : "Save readable device name",
        "description" : "Save readable device name",
        "operationId" : "saveReadableDeviceName",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "default" : ""
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "location details",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful saving of device name",
            "schema" : {
              "$ref" : "#/definitions/DeviceNameResponse"
            }
          },
          "400" : {
            "description" : "Error in request details shared"
          },
          "500" : {
            "description" : "Failure to save device name"
          }
        }
      }
    },
    "/rest/v1/biometric/encounter" : {
      "post" : {
        "tags" : [ "REST API for managing dosing and follow up visits" ],
        "summary" : "Create encounter details",
        "description" : "Create encounter details",
        "operationId" : "createEncounter",
        "parameters" : [ {
          "in" : "body",
          "name" : "visitRequest",
          "description" : "Visit details to create encounter",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful creation of encounter for visit",
            "schema" : {
              "$ref" : "#/definitions/NewVisitResponse"
            }
          },
          "400" : {
            "description" : "Request details to save encounter is not valid"
          },
          "404" : {
            "description" : "Visit for creating encounter not found"
          },
          "500" : {
            "description" : "Failure to create encounter"
          }
        }
      }
    },
    "/rest/v1/biometric/getBiometricTemplatesByUuids" : {
      "post" : {
        "tags" : [ "REST API for manage Participant information(add,retrieve and delete)" ],
        "summary" : "Retrieves list of biometric templates by uuids",
        "description" : "Retrieves list of biometric templates by uuids",
        "operationId" : "getBiometricTemplatesByUuids",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "default" : ""
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "template uuids",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful return of the biometric templates",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SyncTemplateResponse"
              }
            }
          },
          "400" : {
            "description" : "Error in the request uuids"
          },
          "500" : {
            "description" : "Failure to return templates"
          }
        }
      }
    },
    "/rest/v1/biometric/getImagesByUuids" : {
      "post" : {
        "tags" : [ "REST API for manage Participant information(add,retrieve and delete)" ],
        "summary" : "Retrieves images by uuids",
        "description" : "Retrieves images by uuids",
        "operationId" : "getImagesByUuids",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Id of the device",
          "required" : true,
          "type" : "string",
          "default" : ""
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Image uuids",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful return of the images with uuids",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SyncImageResponse"
              }
            }
          },
          "400" : {
            "description" : "Error in the request uuids"
          },
          "500" : {
            "description" : "Failure to return images"
          }
        }
      }
    },
    "/rest/v1/biometric/getParticipantsByUuids" : {
      "post" : {
        "tags" : [ "REST API for manage Participant information(add,retrieve and delete)" ],
        "summary" : "Retrieves list of matched participants by uuids",
        "description" : "Retrieves list of matched participants by uuids",
        "operationId" : "getParticipantsByUuids",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "default" : ""
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Participant uuids",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful of the Participants with Uuids",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PatientResponse"
              }
            }
          },
          "400" : {
            "description" : "Error in request uuids"
          },
          "500" : {
            "description" : "Failure to participants"
          }
        }
      }
    },
    "/rest/v1/biometric/getVisitsByUuids" : {
      "post" : {
        "tags" : [ "REST API for managing dosing and follow up visits" ],
        "summary" : "Get Visit Details By Uuids",
        "description" : "Get Visit Details by Uuids",
        "operationId" : "getVisitsByUuids",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Id of the device",
          "required" : true,
          "type" : "string",
          "default" : ""
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "visit uuid list",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful return visit details",
            "schema" : {
              "$ref" : "#/definitions/VisitResponse"
            }
          },
          "400" : {
            "description" : "Error in request uuids used"
          },
          "500" : {
            "description" : "Failure to return visit details"
          }
        }
      }
    },
    "/rest/v1/biometric/health" : {
      "get" : {
        "tags" : [ "REST API for accessing Configuration information" ],
        "summary" : "Health Status ",
        "description" : "Health Status",
        "operationId" : "health",
        "responses" : {
          "200" : {
            "description" : "Health status UP returned",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/rest/v1/biometric/license" : {
      "post" : {
        "tags" : [ "REST API for accessing Configuration information" ],
        "summary" : "Get license",
        "description" : "Get license",
        "operationId" : "getLicense",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "default" : ""
        }, {
          "in" : "body",
          "name" : "licenseRequest",
          "description" : "License request types",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful retrieval of license",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          },
          "400" : {
            "description" : "Error in request details"
          },
          "500" : {
            "description" : "Failure to get license"
          }
        }
      }
    },
    "/rest/v1/biometric/license/release" : {
      "post" : {
        "tags" : [ "REST API for accessing Configuration information" ],
        "summary" : "Release of license",
        "description" : "Release of license",
        "operationId" : "releaseLicense",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "default" : ""
        }, {
          "in" : "body",
          "name" : "licenseRequest",
          "description" : "License request types",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful license release"
          },
          "400" : {
            "description" : "Error in request details"
          },
          "500" : {
            "description" : "Failure to release license"
          }
        }
      }
    },
    "/rest/v1/biometric/location" : {
      "get" : {
        "tags" : [ "REST API for accessing Configuration information" ],
        "summary" : "Retrieve locations",
        "description" : "Retrieve locations",
        "operationId" : "getLocations",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "On successful return of location details",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          },
          "500" : {
            "description" : "Failure to return location details"
          }
        }
      }
    },
    "/rest/v1/biometric/match" : {
      "post" : {
        "tags" : [ "REST API for manage Participant information(add,retrieve and delete)" ],
        "summary" : "Retrieves list of matched participants",
        "description" : "Retrieves list of matched participants",
        "operationId" : "match",
        "parameters" : [ {
          "in" : "body",
          "name" : "template",
          "description" : "Iris template",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartFile"
          }
        }, {
          "name" : "phone",
          "in" : "query",
          "description" : "Phone number of a participant",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "participantId",
          "in" : "query",
          "description" : "Participant unique id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "country",
          "in" : "query",
          "description" : "Country, participant belongs to",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful match of the Participant",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ParticipantMatchResponse"
              }
            }
          },
          "400" : {
            "description" : "Invalid or incomplete request passed"
          },
          "500" : {
            "description" : "Failure to match a Participant"
          }
        }
      }
    },
    "/rest/v1/biometric/participant/{personUuid}" : {
      "put" : {
        "tags" : [ "REST API for manage Participant information(add,retrieve and delete)" ],
        "summary" : "Soft delete a participant",
        "description" : "Soft delete a participant",
        "operationId" : "voidParticipant",
        "parameters" : [ {
          "name" : "personUuid",
          "in" : "path",
          "description" : "person uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reason",
          "in" : "query",
          "description" : "reason for deleting",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful deletion of the Participant"
          },
          "404" : {
            "description" : "Given participant not found"
          },
          "500" : {
            "description" : "Failure to delete Participant"
          }
        }
      }
    },
    "/rest/v1/biometric/personimage/{personUuid}" : {
      "get" : {
        "tags" : [ "REST API for manage Participant information(add,retrieve and delete)" ],
        "summary" : "Retrieves participant's image in base64 encoded format by uuid",
        "description" : "Retrieves participant's image in base64 encoded format by uuid",
        "operationId" : "retrievePersonImage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "personUuid",
          "in" : "path",
          "description" : "uuid of person",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful return of the person image",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "Person image not found"
          },
          "500" : {
            "description" : "Failure to return person image"
          }
        }
      }
    },
    "/rest/v1/biometric/persontemplate/{personUuid}" : {
      "post" : {
        "tags" : [ "REST API for manage Participant information(add,retrieve and delete)" ],
        "summary" : "Store participant biometric template",
        "description" : "Store participant biometric template",
        "operationId" : "registerTemplate",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "default" : ""
        }, {
          "name" : "personUuid",
          "in" : "path",
          "description" : "person uuid",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful enrollment of participant biometric template"
          },
          "500" : {
            "description" : "Failure to store participant template"
          }
        }
      }
    },
    "/rest/v1/biometric/register" : {
      "post" : {
        "tags" : [ "REST API for manage Participant information(add,retrieve and delete)" ],
        "summary" : "Register a new participant",
        "description" : "Register a new participant",
        "operationId" : "register",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "default" : ""
        }, {
          "name" : "biographicData",
          "in" : "query",
          "description" : "data of a participant",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful creation of the Participant",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          },
          "500" : {
            "description" : "Failure to create a Participant"
          }
        }
      }
    },
    "/rest/v1/biometric/sync" : {
      "post" : {
        "tags" : [ "REST API for accessing Configuration information" ],
        "summary" : "Last sync date updated",
        "description" : "Last sync date updated",
        "operationId" : "updateLastSyncDate",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "default" : ""
        }, {
          "in" : "body",
          "name" : "lastSyncUpdate",
          "description" : "Sync update details",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful updation of sync date",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          },
          "400" : {
            "description" : "Last sync date not proper in request"
          },
          "500" : {
            "description" : "Sync date updation failed"
          }
        }
      }
    },
    "/rest/v1/biometric/sync/config-updates" : {
      "get" : {
        "tags" : [ "REST APIs used by Mobile or Tablet devices to synchronize with the backend data" ],
        "summary" : "Get all the configuration details",
        "description" : "Get all the configuration details",
        "operationId" : "getAllConfigUpdates",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "On successful retrieval of configuration details",
            "schema" : {
              "$ref" : "#/definitions/SyncConfigResponse"
            }
          },
          "500" : {
            "description" : "Failure to get configuration details"
          }
        }
      }
    },
    "/rest/v1/biometric/sync/error" : {
      "post" : {
        "tags" : [ "REST APIs used by Mobile or Tablet devices to synchronize with the backend data" ],
        "summary" : "Save device sync error",
        "description" : "Save device sync error",
        "operationId" : "saveSyncError",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "default" : ""
        }, {
          "in" : "body",
          "name" : "syncErrorRequest",
          "description" : "sync error details to be saved",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful saving of device error"
          },
          "400" : {
            "description" : "Error in sync error details shared for saving"
          },
          "500" : {
            "description" : "Failure to save the device error"
          }
        }
      }
    },
    "/rest/v1/biometric/sync/error/resolved" : {
      "post" : {
        "tags" : [ "REST APIs used by Mobile or Tablet devices to synchronize with the backend data" ],
        "summary" : "Resolve Sync Errors for the keys provided",
        "description" : "Resolve Sync Errors for the keys provided",
        "operationId" : "resolveSyncError",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "default" : ""
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "sync error keys list",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful resolving of all device sync errors"
          },
          "400" : {
            "description" : "Sync Error Keys list is empty"
          },
          "500" : {
            "description" : "Failure to resolve all device sync errors"
          }
        }
      }
    },
    "/rest/v1/biometric/sync/getAllParticipantBiometricsTemplates" : {
      "post" : {
        "tags" : [ "REST APIs used by Mobile or Tablet devices to synchronize with the backend data" ],
        "summary" : "Get All Biometric Template Details for the given sync scope and last modified date",
        "description" : "Get All Biometric Template Details for the given sync scope and last modified date",
        "operationId" : "getAllParticipantBiometricsTemplates",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "default" : ""
        }, {
          "in" : "body",
          "name" : "syncRequest",
          "description" : "Request details to fetch participant biometrics template",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful fetching of biometric templates of participants",
            "schema" : {
              "$ref" : "#/definitions/SyncResponse"
            }
          },
          "400" : {
            "description" : "Sync Error request to fetch details is not proper"
          },
          "500" : {
            "description" : "Failure to fetch participant biometric templates"
          }
        }
      }
    },
    "/rest/v1/biometric/sync/getAllParticipantImages" : {
      "post" : {
        "tags" : [ "REST APIs used by Mobile or Tablet devices to synchronize with the backend data" ],
        "summary" : "Get All Participant Image Details for the given sync scope and last modified date",
        "description" : "Get All Participant Details for the given sync scope and last modified date",
        "operationId" : "getAllParticipantImages",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "default" : ""
        }, {
          "in" : "body",
          "name" : "syncRequest",
          "description" : "Request details to fetch participant images",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful retrieval of participant images",
            "schema" : {
              "$ref" : "#/definitions/SyncResponse"
            }
          },
          "400" : {
            "description" : "Sync Error request to fetch details is not proper"
          },
          "500" : {
            "description" : "Failure to fetch participant images"
          }
        }
      }
    },
    "/rest/v1/biometric/sync/getAllParticipants" : {
      "post" : {
        "tags" : [ "REST APIs used by Mobile or Tablet devices to synchronize with the backend data" ],
        "summary" : "Get All Participant Details for the given sync scope and last modified date",
        "description" : "Get All Participant Details for the given sync scope and last modified date",
        "operationId" : "getAllParticipants",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "syncRequest",
          "description" : "Request details to fetch participant details",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched all participant details",
            "schema" : {
              "$ref" : "#/definitions/SyncResponse"
            }
          },
          "400" : {
            "description" : "Sync Error request to fetch details is not proper"
          },
          "500" : {
            "description" : "Failed to get all participant details"
          }
        }
      }
    },
    "/rest/v1/biometric/sync/getAllVisits" : {
      "post" : {
        "tags" : [ "REST APIs used by Mobile or Tablet devices to synchronize with the backend data" ],
        "summary" : "Get All Visit Details for the given sync scope and last modified date",
        "description" : "Get All Visit Details for the given sync scope and last modified date",
        "operationId" : "getAllVisits",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched visit details",
            "schema" : {
              "$ref" : "#/definitions/SyncResponse"
            }
          },
          "400" : {
            "description" : "Sync Error request to fetch details is not proper"
          },
          "500" : {
            "description" : "Failed to fetch visit details"
          }
        }
      }
    },
    "/rest/v1/biometric/users" : {
      "get" : {
        "tags" : [ "REST API for accessing User Information and saving operator device" ],
        "summary" : "Get All User Details",
        "description" : "Get All User Details",
        "operationId" : "getAllUsers",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "On successful return of all user details",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          },
          "500" : {
            "description" : "Failure to return user details"
          }
        }
      }
    },
    "/rest/v1/biometric/version" : {
      "get" : {
        "tags" : [ "REST API for accessing Configuration information" ],
        "summary" : "Retrieve configuration version details",
        "description" : "Retrieve config version details",
        "operationId" : "getVersionInfo",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "On successful return of version details",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "Version details not found"
          },
          "500" : {
            "description" : "Failure to return version details"
          }
        }
      }
    },
    "/rest/v1/biometric/visit" : {
      "post" : {
        "tags" : [ "REST API for managing dosing and follow up visits" ],
        "summary" : "Create Visit for a patient",
        "description" : "Create visit for a patient",
        "operationId" : "createVisit",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "default" : ""
        }, {
          "in" : "body",
          "name" : "visitRequest",
          "description" : "Details of visit to create",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful creation of visit",
            "schema" : {
              "$ref" : "#/definitions/NewVisitResponse"
            }
          },
          "400" : {
            "description" : "Invalid details shared for visit creation"
          },
          "409" : {
            "description" : "Visit id conflicts with another visit"
          },
          "500" : {
            "description" : "Failure to create a visit"
          }
        }
      }
    },
    "/rest/v1/biometric/visit/{personUuid}" : {
      "get" : {
        "tags" : [ "REST API for managing dosing and follow up visits" ],
        "summary" : "Get Visit Details Of a Patient",
        "description" : "Get Visit Details Of a Patient",
        "operationId" : "retrieveVisit",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "personUuid",
          "in" : "path",
          "description" : "Person whose visits are to be retrieved",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful return of visit details",
            "schema" : {
              "$ref" : "#/definitions/VisitResponse"
            }
          },
          "404" : {
            "description" : "Patient not found"
          },
          "500" : {
            "description" : "Failure to return visit details"
          }
        }
      }
    }
  },
  "definitions" : {
    "AttributeData" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "DeviceNameResponse" : {
      "type" : "object",
      "properties" : {
        "deviceName" : {
          "type" : "string"
        }
      }
    },
    "InputStream" : {
      "type" : "object"
    },
    "MultipartFile" : {
      "type" : "object",
      "properties" : {
        "originalFilename" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "empty" : {
          "type" : "boolean",
          "default" : false
        },
        "bytes" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "size" : {
          "type" : "integer",
          "format" : "int64"
        },
        "inputStream" : {
          "$ref" : "#/definitions/InputStream"
        },
        "contentType" : {
          "type" : "string"
        }
      }
    },
    "NewVisitResponse" : {
      "type" : "object",
      "properties" : {
        "visitUuid" : {
          "type" : "string"
        }
      }
    },
    "Observation" : {
      "type" : "object",
      "properties" : {
        "datetime" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "ParticipantMatchResponse" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string"
        },
        "participantId" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string",
          "enum" : [ "M", "F", "O" ]
        },
        "birthDate" : {
          "type" : "string"
        },
        "matchWith" : {
          "type" : "string"
        },
        "matchingScore" : {
          "type" : "integer",
          "format" : "int32"
        },
        "addresses" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttributeData"
          }
        }
      }
    },
    "PatientResponse" : {
      "type" : "object",
      "properties" : {
        "participantId" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string",
          "enum" : [ "M", "F", "O" ]
        },
        "birthDate" : {
          "type" : "string"
        },
        "nin" : {
          "type" : "string"
        },
        "addresses" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttributeData"
          }
        },
        "participantUuid" : {
          "type" : "string"
        },
        "dateModified" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "SyncConfigResponse" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "hash" : {
          "type" : "string"
        }
      }
    },
    "SyncImageResponse" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "participantUuid" : {
          "type" : "string"
        },
        "dateModified" : {
          "type" : "integer",
          "format" : "int64"
        },
        "image" : {
          "type" : "string"
        }
      }
    },
    "SyncResponse" : {
      "type" : "object",
      "properties" : {
        "dateModifiedOffset" : {
          "type" : "integer",
          "format" : "int64"
        },
        "syncScope" : {
          "$ref" : "#/definitions/SyncScope"
        },
        "optimize" : {
          "type" : "boolean",
          "default" : false
        },
        "syncStatus" : {
          "type" : "string",
          "enum" : [ "OUT_OF_SYNC", "OK" ]
        },
        "uuidsWithDateModifiedOffset" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tableCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ignoredCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "voidedTableCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "records" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "SyncScope" : {
      "type" : "object",
      "properties" : {
        "siteUuid" : {
          "type" : "string"
        },
        "cluster" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        }
      }
    },
    "SyncTemplateResponse" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "participantUuid" : {
          "type" : "string"
        },
        "dateModified" : {
          "type" : "integer",
          "format" : "int64"
        },
        "biometricsTemplate" : {
          "type" : "string"
        }
      }
    },
    "VisitResponse" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "participantUuid" : {
          "type" : "string"
        },
        "dateModified" : {
          "type" : "integer",
          "format" : "int64"
        },
        "visitUuid" : {
          "type" : "string"
        },
        "locationUuid" : {
          "type" : "string"
        },
        "startDatetime" : {
          "type" : "string"
        },
        "visitType" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttributeData"
          }
        },
        "observations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Observation"
          }
        }
      }
    }
  }
}